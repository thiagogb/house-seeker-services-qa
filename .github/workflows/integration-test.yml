name: Playwright CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  execute:
    name: Prepare And Execute Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Checkout current branch on app repo
        uses: actions/checkout@v4
        id: priority-checkout
        with:
          repository: thiagogb/house-seeker-services
          ref: ${{ env.BRANCH_NAME }}
          token: ${{ secrets.PAT }}
          path: app
          continue-on-error: true

      - name: Fallback checkout main branch on app repo
        if: steps.priority-checkout.outcome == 'failure'
        uses: actions/checkout@v4
        with:
          repository: thiagogb/house-seeker-services
          ref: main
          path: app
          token: ${{ secrets.PAT }}

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 22
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        working-directory: app
        run: mvn -DskipTests -B package --file pom.xml

      - name: Run PostgreSQL container
        run: |
          docker run -d \
          --name house-seeker-test-db \
          -e POSTGRES_USER=house-seeker \
          -e POSTGRES_PASSWORD=house-seeker \
          -e POSTGRES_DB=house-seeker \
          -e TZ=GMT-3 \
          -e PGTZ=GMT-3 \
          -p 5432:5432 \
          --network host \
          postgres:16.1-alpine

      - name: Waiting PostgreSQL container healthcheck
        run: |
          until [ "`docker inspect -f {{.State.Health.Status}} house-seeker-test-db`"=="healthy" ]; do
            sleep 0.1;
          done;

      - name: Run RabbitMQ container
        run: |
          docker run -d \
          --name house-seeker-messaging-test \
          -e RABBITMQ_DEFAULT_PASS=house-seeker \
          -e RABBITMQ_DEFAULT_USER=house-seeker \
          -p 5672:5672 \
          --network host \
          rabbitmq:3.13.0-alpine

      - name: Waiting RabbitMQ container healthcheck
        run: |
          until [ "`docker inspect -f {{.State.Health.Status}} house-seeker-messaging-test`"=="healthy" ]; do
            sleep 0.1;
          done;

      - name: Starting Data Application
        working-directory: app/data/target
        run: nohup java -jar -Dspring.flyway.locations=classpath:db/migration/schema,classpath:db/migration/test data-0.0.1-SNAPSHOT.jar &

      - name: Waiting Data Application to Respond
        run: |
          until curl --output /dev/null --silent --head --fail http://localhost:8082/actuator; do
            printf '.';
            sleep 1;
          done;

      - name: Starting API Application
        working-directory: app/api/target
        run: nohup java -jar api-0.0.1-SNAPSHOT.jar &

      - name: Waiting API Application to Respond
        run: |
          until curl --output /dev/null --silent --head --fail http://localhost:8080/actuator; do
            printf '.';
            sleep 1;
          done;

      - name: Run Playwright tests
        run: API_URL=http://localhost:8080 CI=true npx playwright test

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
